{"version":3,"sources":["Components/Navbar.js","Components/Books/Bookchapter.js","Components/Books/Bookprogress.js","Components/Books/Bookdetails.js","Components/Books/Bookcontrols.js","Components/Books/Book.js","Components/data.js","Redux/books/book.js","Components/Addbook.js","Components/Books/Bookpage.js","Components/Category/Category.js","Redux/configureStore.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","type","Bookchapter","chapter","Bookprogress","progress","CircularProgress","color","size","thickness","variant","value","Bookdetails","category","author","title","Bookcontrols","removeItem","onClick","Book","generateCompletion","Math","floor","random","generateChapter","genres","ADD_BOOK","uuid","REMOVE_BOOK","FETCH_BOOK","initialState","addBook","newItem","payload","booksReducer","state","action","filter","book","item_id","Object","entries","map","key","Addbook","useState","setTitle","cat","setCat","dispatch","useDispatch","addNewBookToStore","e","preventDefault","a","fetch","method","body","JSON","stringify","headers","addNewBook","window","alert","placeholder","onChange","target","item","Bookpage","removeFromBookStore","id","itemId","books","useSelector","useEffect","json","bookData","Category","reducer","combineReducers","store","createStore","applyMiddleware","thunk","logger","App","path","exact","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b8676dc3.chunk.js","sourcesContent":["/* eslint-disable  import/no-extraneous-dependencies */\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FaUser } from 'react-icons/fa';\n\nconst Navbar = () => (\n  <nav className=\"nav d-flex a-center p-relative\">\n    <h1 className=\"nav-title\">Bookstore CMS </h1>\n    <ul className=\"nav-links d-flex j-center a-center\">\n      <li>\n        <Link to=\"/\" className=\"nav-link\">Books</Link>\n      </li>\n      <li>\n        <Link to=\"/categories\" className=\"nav-link\">Category</Link>\n      </li>\n    </ul>\n    <button type=\"button\" className=\"profile-btn d-flex a-center j-center\" aria-label=\"user-icon\"><FaUser className=\"user\" /></button>\n  </nav>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Bookchapter = ({ chapter }) => (\n  <article>\n    <div className=\"chapter d-flex f-col j-center\">\n      <h1 className=\"book-chapter\">Current Chapter</h1>\n      <p>{`chapter ${chapter}`}</p>\n      <button type=\"button\" className=\"chapter-btn\">update progress</button>\n    </div>\n  </article>\n);\n\nBookchapter.propTypes = {\n  chapter: PropTypes.number.isRequired,\n};\n\nexport default Bookchapter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CircularProgress } from '@material-ui/core';\n\nconst Bookprogress = ({ progress }) => (\n  <article>\n    <span className=\"book-progress d-flex a-center j-center\">\n      <CircularProgress color=\"inherit\" size={75} thickness={2} className=\"circle\" variant=\"determinate\" value={progress} />\n      <div className=\"percent d-flex f-col a-center j-center\">\n        <h3>\n          {progress}\n          %\n        </h3>\n        <p>completed</p>\n      </div>\n    </span>\n\n  </article>\n);\n\nBookprogress.propTypes = {\n  progress: PropTypes.number.isRequired,\n};\n\nexport default Bookprogress;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Bookdetails = ({ category, author, title }) => (\n  <section className=\"book-details d-flex f-col\">\n    <h5 className=\"book-category\">{category}</h5>\n    <h2 className=\"book-title\">{title}</h2>\n    <h3 className=\"book-author\">{author}</h3>\n  </section>\n);\n\nBookdetails.propTypes = {\n  category: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  author: PropTypes.string.isRequired,\n};\n\nexport default Bookdetails;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Bookcontrols = ({ removeItem }) => (\n  <section className=\"control\">\n    <div className=\"btn-cont d-flex  a-center\">\n      <button type=\"button\" className=\"control-btn d-flex a-center\">comment</button>\n      <button type=\"button\" className=\"control-btn d-flex a-center\" onClick={removeItem}>remove</button>\n      <button type=\"button\" className=\"control-btn d-flex a-center\">edit</button>\n    </div>\n  </section>\n);\n\nBookcontrols.propTypes = {\n  removeItem: PropTypes.func.isRequired,\n};\n\nexport default Bookcontrols;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Bookchapter from './Bookchapter';\nimport Bookprogress from './Bookprogress';\nimport Bookdetails from './Bookdetails';\nimport Bookcontrols from './Bookcontrols';\nimport './book.css';\n\nconst Book = ({\n  category, author, chapter, title, progress, removeItem,\n}) => (\n  <article className=\"book-card d-flex a-center\">\n    <div className=\"book-details-control\">\n      <Bookdetails title={title} author={author} category={category} />\n      <Bookcontrols removeItem={removeItem} />\n    </div>\n    <div>\n      <Bookprogress progress={progress} />\n    </div>\n    <div>\n      <Bookchapter chapter={chapter} />\n    </div>\n  </article>\n);\n\nBook.propTypes = {\n  title: PropTypes.string.isRequired,\n  progress: PropTypes.number.isRequired,\n  chapter: PropTypes.number.isRequired,\n  author: PropTypes.string.isRequired,\n  category: PropTypes.string.isRequired,\n  removeItem: PropTypes.func.isRequired,\n\n};\n\nexport default Book;\n","import { v4 as uuid } from 'uuid';\n\nconst generateCompletion = () => (Math.floor(Math.random() * 100));\nconst generateChapter = () => (Math.floor(Math.random() * 20));\nconst genres = ['science', 'drama', 'action', 'thriller', 'love', 'horror'];\nconst data = [\n  {\n    title: 'Hunger',\n    chapter: generateChapter(),\n    progress: generateCompletion(),\n    author: 'wande',\n    category: 'science',\n    id: uuid(),\n  },\n  {\n    title: 'money heist',\n    chapter: generateChapter(),\n    progress: generateCompletion(),\n    author: 'rtrtr',\n    category: 'history',\n    id: uuid(),\n  },\n];\n\nexport {\n  data, generateCompletion, genres, generateChapter,\n};\n","import { generateChapter, generateCompletion } from '../../Components/data';\n\nconst ADD_BOOK = 'bookStore/books/ADD_BOOK';\nconst REMOVE_BOOK = 'bookStore/books/REMOVE_BOOK';\nconst FETCH_BOOK = 'bookStore/books/FETCH_BOOK';\nconst initialState = [];\n\nconst addBook = (newItem) => ({\n  type: ADD_BOOK,\n  payload: {\n    ...newItem, progress: generateCompletion(), chapter: generateChapter(), author: 'gbenga',\n  },\n});\n\nconst removeBook = (newItem) => ({\n  type: REMOVE_BOOK,\n  payload: newItem,\n});\n\nconst fetchBook = (allBooks) => ({\n  type: FETCH_BOOK,\n  payload: allBooks,\n});\n\nexport const addNewBook = (newItem) => async (dispatch) => {\n  await fetch('https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi/apps/aWBfup2VaaGqFRWVe1S7/books/',\n    {\n      method: 'POST',\n      body: JSON.stringify(newItem),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    });\n  dispatch(addBook(newItem));\n};\n\nexport const getAllBooks = () => async (dispatch) => {\n  const books = await fetch('https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi/apps/aWBfup2VaaGqFRWVe1S7/books/');\n  const bookData = await books.json();\n  dispatch(fetchBook(bookData));\n};\n\nexport const removeFromStore = (itemId) => async (dispatch) => {\n  await fetch(`https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi/apps/aWBfup2VaaGqFRWVe1S7/books/${itemId}`,\n    {\n      method: 'DELETE',\n      body: JSON.stringify({ item_id: itemId }),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8',\n      },\n    });\n  dispatch(removeBook(itemId));\n};\n\nconst booksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_BOOK:\n      return ([\n        ...state,\n        action.payload,\n      ]);\n    case REMOVE_BOOK:\n      return state.filter((book) => book.item_id !== action.payload);\n    case FETCH_BOOK:\n      return Object.entries(action.payload).map(([key, value]) => {\n        const [book] = value;\n        return {\n          item_id: key,\n          ...book,\n          chapter: generateChapter(),\n          progress: generateCompletion(),\n          author: 'gbenga',\n        };\n      });\n    default:\n      return state;\n  }\n};\n\nexport default booksReducer;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v4 as uuid } from 'uuid';\nimport { addNewBook } from '../Redux/books/book';\n\nconst Addbook = ({ category }) => {\n  const [title, setTitle] = useState('');\n  const [cat, setCat] = useState('science');\n  const dispatch = useDispatch();\n\n  const addNewBookToStore = (e) => {\n    e.preventDefault();\n    const newItem = {\n      title, category: cat, item_id: uuid(),\n    };\n    if (title !== '') {\n      dispatch(addNewBook(newItem));\n      setTitle('');\n    } else {\n      window.alert('Enter a Book Title');\n    }\n  };\n\n  return (\n    <div className=\"add-book j-center f-col d-flex\">\n      <h2>Add a New Book</h2>\n      <form className=\"form d-flex a-center\">\n        <input\n          type=\"text\"\n          className=\"form-input\"\n          value={title}\n          placeholder=\"Add a new book\"\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <select className=\"select\" onChange={(e) => setCat(e.target.value)}>\n          { category.map((item) => (\n            <option key={item} value={item}>{item}</option>\n          ))}\n        </select>\n        <button type=\"submit\" className=\"submit-btn\" onClick={(e) => addNewBookToStore(e)}> Add Book</button>\n      </form>\n    </div>\n  );\n};\n\nAddbook.propTypes = {\n  category: PropTypes.arrayOf(addNewBook).isRequired,\n};\n\nexport default Addbook;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Book from './Book';\nimport Addbook from '../Addbook';\nimport { genres } from '../data';\nimport { getAllBooks, removeFromStore } from '../../Redux/books/book';\n\nconst Bookpage = () => {\n  const dispatch = useDispatch();\n\n  const removeFromBookStore = (id) => {\n    dispatch(removeFromStore(id));\n  };\n\n  const books = useSelector((state) => state.books);\n  useEffect(() => {\n    dispatch(getAllBooks());\n  }, []);\n  return (\n    <div className=\"books-cont d-flex f-col j-center a-center\">\n      {books.map((book) => (\n        <Book\n          key={book.item_id}\n          category={book.category}\n          title={book.title}\n          progress={book.progress}\n          author={book.author}\n          chapter={book.chapter}\n          removeItem={() => removeFromBookStore(book.item_id)}\n        />\n      ))}\n      <Addbook category={genres} />\n    </div>\n  );\n};\n\nexport default Bookpage;\n","import React from 'react';\n\nconst Category = () => (\n  <section className=\"category d-flex a-center j-center\">\n    <p>Under Construction...</p>\n  </section>\n);\n\nexport default Category;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport booksReducer from './books/book';\n\nconst reducer = combineReducers({\n  books: booksReducer,\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk, logger),\n);\n\nexport default store;\n","import './App.css';\nimport { Provider } from 'react-redux';\nimport { Route, Routes } from 'react-router-dom';\nimport Navbar from './Components/Navbar';\nimport Bookpage from './Components/Books/Bookpage';\nimport Category from './Components/Category/Category';\nimport store from './Redux/configureStore';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"bookstore\">\n        <Navbar />\n        <Routes>\n          <Route path=\"/\" exact element={<Bookpage />} />\n          <Route path=\"/categories\" exact element={<Category />} />\n        </Routes>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}